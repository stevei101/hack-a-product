#!/bin/bash

echo "üîç GitHub Repository Configuration Checklist"
echo "============================================"

echo ""
echo "üìã Step 1: Verify GitHub Repository Secrets"
echo "-------------------------------------------"
echo "Go to your GitHub repository and check:"
echo "1. Repository ‚Üí Settings ‚Üí Secrets and variables ‚Üí Actions"
echo "2. Look for these secrets:"
echo "   ‚úÖ AWS_ROLE_ARN=arn:aws:iam::874834750693:role/product-mindset-github-actions-dev"
echo "   ‚úÖ AWS_REGION=us-east-1"
echo "   ‚úÖ NIM_API_KEY=your_nvidia_api_key"
echo "   ‚úÖ POSTGRES_PASSWORD=your_secure_password"
echo ""
echo "If AWS_ROLE_ARN is missing, add it with the value above."

echo ""
echo "üìã Step 2: Verify GitHub Repository Permissions"
echo "----------------------------------------------"
echo "Go to your GitHub repository and check:"
echo "1. Repository ‚Üí Settings ‚Üí Actions ‚Üí General"
echo "2. Under 'Workflow permissions':"
echo "   ‚úÖ Select 'Read and write permissions'"
echo "   ‚úÖ Check 'Allow GitHub Actions to create and approve pull requests'"
echo ""
echo "3. Under 'Fork pull request workflows from outside collaborators':"
echo "   ‚úÖ Select 'Require approval for first-time contributors' (recommended)"

echo ""
echo "üìã Step 3: Verify Repository Name"
echo "--------------------------------"
echo "Current trust policy expects repository: stevei101/hack-a-product"
echo "Your actual repository should be: $(git remote get-url origin 2>/dev/null | sed 's/.*github.com[:/]\([^.]*\).*/\1/' || echo 'Cannot determine from git remote')"
echo ""
echo "If the repository names don't match, we need to update the trust policy."

echo ""
echo "üìã Step 4: Check GitHub Actions Settings"
echo "---------------------------------------"
echo "Go to your GitHub repository and check:"
echo "1. Repository ‚Üí Settings ‚Üí Actions ‚Üí General"
echo "2. Make sure 'Allow all actions and reusable workflows' is selected"
echo "3. Or at minimum 'Allow local actions and reusable workflows'"

echo ""
echo "üìã Step 5: Verify Branch Protection (if any)"
echo "-------------------------------------------"
echo "If you have branch protection rules:"
echo "1. Go to Repository ‚Üí Settings ‚Üí Branches"
echo "2. Make sure 'Allow specified actors to bypass required pull requests' includes:"
echo "   - GitHub Actions"
echo "   - Your GitHub username"

echo ""
echo "üîß Quick Fix Commands"
echo "====================="
echo ""
echo "If you need to update the trust policy for a different repository:"
echo ""
echo "1. Get your repository name:"
echo "   REPO_NAME=\$(git remote get-url origin | sed 's/.*github.com[:/]\\([^.]*\\).*/\\1/')"
echo "   echo \"Repository: \$REPO_NAME\""
echo ""
echo "2. Update the trust policy (replace with your actual repository):"
echo "   aws iam update-assume-role-policy --role-name product-mindset-github-actions-dev --policy-document '{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::874834750693:oidc-provider/token.actions.githubusercontent.com\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"token.actions.githubusercontent.com:aud\":\"sts.amazonaws.com\"},\"StringLike\":{\"token.actions.githubusercontent.com:sub\":\"repo:YOUR_ORG/YOUR_REPO:ref:refs/heads/*\"}}}]}'"

echo ""
echo "üö® Common Issues & Solutions"
echo "============================"
echo ""
echo "‚ùå 'Credentials could not be loaded'"
echo "   ‚Üí Check AWS_ROLE_ARN secret exists in GitHub"
echo "   ‚Üí Verify repository permissions allow Actions"
echo "   ‚Üí Ensure trust policy matches your repository name"
echo ""
echo "‚ùå 'Access denied'"
echo "   ‚Üí Check IAM role has necessary permissions"
echo "   ‚Üí Verify OIDC provider is configured correctly"
echo ""
echo "‚ùå 'Role not found'"
echo "   ‚Üí Verify the role ARN is correct"
echo "   ‚Üí Check the role exists in the correct AWS account"

echo ""
echo "üìû Next Steps"
echo "============="
echo "1. Verify all the checklist items above"
echo "2. Push a change to trigger the workflow"
echo "3. Check the Actions tab for detailed error logs"
echo "4. If still failing, check CloudTrail logs in AWS for AssumeRoleWithWebIdentity failures"
